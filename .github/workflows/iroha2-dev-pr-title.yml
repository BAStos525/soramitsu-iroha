name: I2::Dev::Title

on:
  pull_request:
    branches: [iroha2-dev]
    types: [opened, edited, reopened, synchronize]

jobs:
  check:
    runs-on: ubuntu-latest
    # TODO: Add labels when https://github.com/actions/first-interaction/issues/10 is fixed.!!!
    steps:
      - name: Feature
        uses: actions-ecosystem/action-regex-match@v2
        id: feature-match
        with:
          text: ${{ github.event.pull_request.title }}
          regex: '^\[feature\] #\d+(, #\d+)*: .+$'
      # - name: Add feature label
      #   uses: actions-ecosystem/action-add-labels@v1
      #   if: steps.feature-match.outputs.match != ''
      #   continue-on-error: true
      #   with:
      #     github_token: ${{ secrets.github_token }}
      #     labels: |
      #       Enhancement

      - name: Refactor
        uses: actions-ecosystem/action-regex-match@v2
        id: refactor-match
        if: steps.feature-match.outputs.match == ''
        with:
          text: ${{ github.event.pull_request.title }}
          regex: '^\[refactor\]( #\d+(, #\d+)*)?: .+$'
      # - name: Add Refactor label
      #   uses: actions-ecosystem/action-add-labels@v1
      #   if: steps.refactor-match.outputs.match != ''
      #   continue-on-error: true
      #   with:
      #     github_token: ${{ secrets.github_token }}
      #     labels: |
      #       Refactor

      - name: Fix
        uses: actions-ecosystem/action-regex-match@v2
        id: fix-match
        if: steps.refactor-match.outputs.match == ''
        with:
          text: ${{ github.event.pull_request.title }}
          regex: '\[fix\] #\d+(, #\d+)*: .+$'
      # - name: Add fix label
      #   uses: actions-ecosystem/action-add-labels@v1
      #   if: steps.fix-match.outputs.match != ''
      #   continue-on-error: true
      #   with:
      #     github_token: ${{ secrets.github_token }}
      #     labels: |
      #       Bug

      - name: Documentation
        uses: actions-ecosystem/action-regex-match@v2
        id: docs-match
        if: steps.feature-match.outputs.match == ''
        with:
          text: ${{ github.event.pull_request.title }}
          regex: '^\[documentation\]( #\d+(, #\d+)*)?: .+$'
      # - name: Add Documentation label
      #   uses: actions-ecosystem/action-add-labels@v1
      #   if: steps.docs-match.outputs.match != ''
      #   continue-on-error: true
      #   with:
      #     github_token: ${{ secrets.github_token }}
      #     labels: |
      #       Documentation

      - name: CI
        uses: actions-ecosystem/action-regex-match@v2
        id: ci-match
        if: steps.feature-match.outputs.match == ''
        with:
          text: ${{ github.event.pull_request.title }}
          regex: '^\[ci\]( #\d+(, #\d+)*)?: .+$'
      # - name: Add CI label
      #   uses: actions-ecosystem/action-add-labels@v1
      #   if: steps.ci-match.outputs.match != ''
      #   continue-on-error: true
      #   with:
      #     github_token: ${{ secrets.github_token }}
      #     labels: |
      #       CI

      - name: None of the above
        if: steps.fix-match.outputs.match == '' && steps.refactor-match.outputs.match == '' && steps.feature-match.outputs.match == '' && steps.docs-match.outputs.match == '' && steps.ci-match.outputs.match == ''
        run: exit 1

  commit-message-check:
    runs-on: ubuntu-latest
    steps:
      - name: Check for Feature
        id: feature-match
        continue-on-error: true
        uses: gsactions/commit-message-checker@v1
        with:
          pattern: '^\[feature\] #\d+(, #\d+)*: .+$'
          error: 'You need at least one'
          excludeDescription: 'true'
          excludeTitle: 'true'
          checkAllCommitMessages: 'true'
          accessToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for Refactor
        id: refactor-match
        continue-on-error: true
        uses: gsactions/commit-message-checker@v1
        with:
          pattern: '^\[refactor\]( #\d+(, #\d+)*)?: .+$'
          error: 'You need at least one'
          excludeDescription: 'true'
          excludeTitle: 'true'
          checkAllCommitMessages: 'true'
          accessToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for Fix
        id: fix-match
        continue-on-error: true
        uses: gsactions/commit-message-checker@v1
        with:
          pattern: '^\[fix\] #\d+(, #\d+)*: .+$'
          error: 'You need at least one'
          excludeDescription: 'true'
          excludeTitle: 'true'
          checkAllCommitMessages: 'true'
          accessToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for Documentation
        id: docs-match
        continue-on-error: true
        uses: gsactions/commit-message-checker@v1
        with:
          pattern: '^\[documentation\]( #\d+(, #\d+)*)?: .+$'
          error: 'You need at least one'
          excludeDescription: 'true'
          excludeTitle: 'true'
          checkAllCommitMessages: 'true'
          accessToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for CI
        id: ci-match
        continue-on-error: true
        uses: gsactions/commit-message-checker@v1
        with:
          pattern: '^\[ci\]( #\d+(, #\d+)*)?: .+$'
          error: 'You need at least one'
          excludeDescription: 'true'
          excludeTitle: 'true'
          checkAllCommitMessages: 'true'
          accessToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Any of the above
        if: steps.feature-match.outcome == 'failure' && steps.refactor-match.outcome == 'failure' && steps.fix-match.outcome == 'failure' && steps.docs-match.outcome == 'failure' && steps.ci-match.outcome == 'failure'
        run: exit 1
